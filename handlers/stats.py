# handlers/stats.py
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from aiogram.filters import Command
from database.db import get_user_stats
import os
from utils.image_gen import generate_stats_image

router = Router()

@router.message(Command("stats"))
async def cmd_stats(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É + –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–∫–∏"""
    user_id = message.from_user.id
    stats = await get_user_stats(user_id)

    text = "üìä *–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:*\n\n"
    text += f"–í—Å–µ–≥–æ –ø—Ä–∏–≤—ã—á–µ–∫: {stats['total_habits']}\n"
    text += f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è: {stats['done_today']}\n"
    text += f"‚ùå –ü—Ä–æ–ø—É—â–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è: {stats['skipped_today']}\n\n"

    if stats['best_streak']['name']:
        text += f"üî• –õ—É—á—à–∞—è —Ü–µ–ø–æ—á–∫–∞: {stats['best_streak']['value']} –¥–Ω–µ–π ‚Äî *¬´{stats['best_streak']['name']}¬ª*\n"

    if stats['current_streak']['name']:
        streak = stats['current_streak']['value']
        emoji = "üü¢" if streak > 0 else "üî¥"
        text += f"{emoji} –¢–µ–∫—É—â–∞—è —Ü–µ–ø–æ—á–∫–∞: {streak} –¥–Ω–µ–π ‚Äî *¬´{stats['current_streak']['name']}¬ª*\n"

    text += "\nüí™ –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ ‚Äî –∫–∞–∂–¥—ã–π —à–∞–≥ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ!"
    text += "\n\nüê¢ *–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ß–µ—Ä–µ–ø–∞—à–∫–∞ –°—Ç–µ–ø–∞* ‚Äî —Ç–≤–æ–π —Å–ø—É—Ç–Ω–∏–∫ –Ω–∞ –ø—É—Ç–∏ –∫ –ª—É—á—à–µ–π –≤–µ—Ä—Å–∏–∏ —Å–µ–±—è!"

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üñºÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫ –∫–∞—Ä—Ç–∏–Ω–∫—É", callback_data="show_stats_image")]
    ])

    await message.answer(text, parse_mode="Markdown", reply_markup=kb)

@router.message(Command("statsimg"))
async def cmd_statsimg(message: Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –≤–∏–¥–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏"""
    user_id = message.from_user.id

    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
        image_path = await generate_stats_image(user_id)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º
        photo = FSInputFile(image_path)
        await message.answer_photo(
            photo,
            caption="üìä –í–æ—Ç —Ç–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –∫–∞—Ä—Ç–∏–Ω–∫–µ!\n\n"
                    "–°–æ—Ö—Ä–∞–Ω–∏ –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Å—å —Å –¥—Ä—É–≥–æ–º ‚Äî —á—Ç–æ–±—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å—Å—è üòä"
        )

        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if os.path.exists(image_path):
            os.remove(image_path)

    except Exception as e:
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")

@router.callback_query(F.data == "show_stats_image")
async def show_stats_image(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫ –∫–∞—Ä—Ç–∏–Ω–∫—É'"""
    print("‚úÖ [DEBUG] –û–±—Ä–∞–±–æ—Ç—á–∏–∫ show_stats_image —Å—Ä–∞–±–æ—Ç–∞–ª!")  # –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    user_id = callback.from_user.id

    try:
        image_path = await generate_stats_image(user_id)
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo,
            caption="üìä –í–æ—Ç —Ç–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –∫–∞—Ä—Ç–∏–Ω–∫–µ!"
        )

        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
        if os.path.exists(image_path):
            os.remove(image_path)

    except Exception as e:
        await callback.message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É.")
        print(f"[ERROR] {e}")

    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ
    await callback.answer()