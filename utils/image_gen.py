# utils/image_gen.py
from PIL import Image, ImageDraw, ImageFont
import os
import re
from database.db import get_user_stats, get_user_habits

# –ü—É—Ç–∏ –∫ —à—Ä–∏—Ñ—Ç–∞–º
FONT_PATH = os.path.join(os.path.dirname(__file__), "fonts", "DejaVuSans.ttf")
EMOJI_FONT_PATH = os.path.join(os.path.dirname(__file__), "fonts", "NotoEmoji-Regular.ttf")

def get_font(size=20):
    try:
        return ImageFont.truetype(FONT_PATH, size)
    except Exception as e:
        print(f"[WARN] –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π —à—Ä–∏—Ñ—Ç: {e}")
        return ImageFont.load_default()

def get_emoji_font(size=20):
    try:
        return ImageFont.truetype(EMOJI_FONT_PATH, size)
    except Exception as e:
        print(f"[WARN] –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —à—Ä–∏—Ñ—Ç —ç–º–æ–¥–∑–∏: {e}")
        return get_font(size)

def is_emoji(char):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–∏–º–≤–æ–ª —ç–º–æ–¥–∑–∏"""
    emoji_ranges = [
        (0x1F300, 0x1F6FF),    # Miscellaneous Symbols and Pictographs
        (0x1F900, 0x1F9FF),    # Supplemental Symbols and Pictographs
        (0x2600, 0x26FF),      # Miscellaneous Symbols
        (0x2700, 0x27BF),      # Dingbats
        (0x1F1E6, 0x1F1FF),    # Flags
    ]
    cp = ord(char)
    return any(start <= cp <= end for start, end in emoji_ranges)

def draw_text_with_emoji(draw, text, x, y, font, emoji_font, fill=(0, 0, 0)):
    """–†–∏—Å—É–µ—Ç —Ç–µ–∫—Å—Ç, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–∞–∑–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –∏ —ç–º–æ–¥–∑–∏. –≠–º–æ–¥–∑–∏ —Ä–∏—Å—É—é—Ç—Å—è –ß–Å–†–ù–´–ú, —Ç–µ–∫—Å—Ç ‚Äî —Å fill."""
    for char in text:
        if is_emoji(char):
            # –≠–º–æ–¥–∑–∏ ‚Äî –≤—Å–µ–≥–¥–∞ —á—ë—Ä–Ω—ã–º (–∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Ü–≤–µ—Ç–æ–º —à—Ä–∏—Ñ—Ç–∞)
            draw.text((x, y), char, font=emoji_font, fill=(0, 0, 0))
        else:
            # –û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç ‚Äî —Å –∑–∞–¥–∞–Ω–Ω—ã–º fill
            draw.text((x, y), char, font=font, fill=fill)
        # –ü–æ–ª—É—á–∞–µ–º —à–∏—Ä–∏–Ω—É —Å–∏–º–≤–æ–ª–∞
        current_font = emoji_font if is_emoji(char) else font
        bbox = draw.textbbox((0, 0), char, font=current_font)
        x += bbox[2] - bbox[0]  # —Å–¥–≤–∏–≥–∞–µ–º x

async def generate_stats_image(user_id: int) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É"""
    stats = await get_user_stats(user_id)
    habits = await get_user_habits(user_id)

    width, height = 600, 500
    img = Image.new('RGB', (width, height), color=(240, 248, 255))  # aliceblue
    draw = ImageDraw.Draw(img)

    # –®—Ä–∏—Ñ—Ç—ã
    title_font = get_font(28)
    text_font = get_font(20)
    emoji_font = get_emoji_font(22)

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    draw_text_with_emoji(draw, "üìä –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", 20, 20, text_font, emoji_font, fill=(40, 40, 40))

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
    y = 80
    draw_text_with_emoji(draw, f"–í—Å–µ–≥–æ –ø—Ä–∏–≤—ã—á–µ–∫: {stats['total_habits']}", 20, y, text_font, emoji_font, fill=(60, 60, 60))
    y += 40
    draw_text_with_emoji(draw, f"‚úÖ –°–µ–≥–æ–¥–Ω—è: {stats['done_today']}", 20, y, text_font, emoji_font, fill=(30, 180, 30))
    y += 40
    draw_text_with_emoji(draw, f"‚ùå –ü—Ä–æ–ø—É—â–µ–Ω–æ: {stats['skipped_today']}", 20, y, text_font, emoji_font, fill=(180, 30, 30))

    # –õ—É—á—à–∞—è —Ü–µ–ø–æ—á–∫–∞
    y += 50
    if stats['best_streak']['name']:
        streak = stats['best_streak']['value']
        name = stats['best_streak']['name']
        draw_text_with_emoji(draw, f"üî• –õ—É—á—à–∞—è —Ü–µ–ø–æ—á–∫–∞: {streak} –¥–Ω–µ–π", 20, y, text_font, emoji_font, fill=(220, 120, 30))
        y += 30
        draw_text_with_emoji(draw, f"¬´{name}¬ª", 40, y, text_font, emoji_font, fill=(80, 80, 80))

    # –¢–µ–∫—É—â–∞—è —Ü–µ–ø–æ—á–∫–∞
    y += 40
    if stats['current_streak']['name']:
        streak = stats['current_streak']['value']
        name = stats['current_streak']['name']
        color = (30, 180, 30) if streak > 0 else (180, 30, 30)
        emoji_char = "üéØ" if streak > 0 else "üîÑ"
        draw_text_with_emoji(draw, f"{emoji_char} –¢–µ–∫—É—â–∞—è —Ü–µ–ø–æ—á–∫–∞: {streak} –¥–Ω–µ–π", 20, y, text_font, emoji_font, fill=color)
        y += 30
        draw_text_with_emoji(draw, f"¬´{name}¬ª", 40, y, text_font, emoji_font, fill=(80, 80, 80))

    # –ü–æ–¥–ø–∏—Å—å –°—Ç–µ–ø—ã
    y += 50
    draw_text_with_emoji(draw, "üê¢ –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ß–µ—Ä–µ–ø–∞—à–∫–∞ –°—Ç–µ–ø–∞", 20, y, text_font, emoji_font, fill=(70, 130, 180))
    y += 25
    draw_text_with_emoji(draw, "–¢—ã –º–æ–ª–æ–¥–µ—Ü ‚Äî —è –≤ —Ç–µ–±—è –≤–µ—Ä—é!", 20, y, text_font, emoji_font, fill=(70, 130, 180))

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    output_path = f"stats_{user_id}.png"
    img.save(output_path)
    return output_path